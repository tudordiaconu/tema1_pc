Diaconu Tudor-Gabriel
Grupa 312 CA

Problema 1
	
	Din cauza faptului ca restrictiile ne precizau ca nu putem folosi vectori, am hotarat sa citesc primii 2 copaci in 2 variabile, urmand ca apoi, prin intermediul unui while, sa citesc succesiv urmatorii copaci prin variabila x2. La finalul fiecarei citiri, variabila x0 lua valoarea variabilei x1, variabila x1 lua valoarea variabilei x2, iar variabila x2 era citita din nou, astfel "mutandu-ne" la urmatorul copac. Verificam de fiecare data variabila x1, pentru a vedea daca copacul respectiv este special(x1>x0 si x1>x2) , intrucat x1 marca copacul din mijloc. Daca copacul era special, ii adaugam inaltimea la suma s, pe care am afisat-o, si cresteam variabila nr, care marcheaza numarul copacilor speciali. Astfel, am putut calcula si media aritmetica, aceasta fiind s/nr, apoi afisand-o. De asemenea, am luat doua variabile, minn si maxx, care m-au ajutat in determinarea copacului minim si maxim, iar contorul i tinea minte numarul copacului pe care ne aflam, pentru a sti daca este o pozitie para sau impara. In cele din urma, variabilele okmin si okmax au fost niste contori care m-au ajutat sa determin daca exista un minim pe pozitie para si un maxim pe pozitie impara. In caz contrar, trebuia afisat -1 pentru fiecare din cazuri.

Problema 2
	
	Mi-am construit initial 2 functii, una care ordoneaza crescator cifrele unui numar, iar cealalta care le ordoneaza descrescator, acest lucru fiind posibil prin intermediul unui vector de frecventa. Apoi, in main, folosindu-ma de restrictia ca m + k <= 100, am hotarat sa-mi construiesc un vector nr in care salvam diferentele calculate. Dupa construirea vectorului, l-am parcurs pentru a determina daca se repeta vreo diferenta. Cand gaseam o egalitate, variabila contor devenea 1 pentru a marca rezultatul, variabila m devenea j - i pentru a indica cate numere se afla intre doua diferente egale, iar variabila k tinea minte numarul de pasi care au fost efectuati pana la gasirea secventei. La final, am afisat ceea ce se cerea, respectiv variabila k(numarul pasilor) si numerele din secventa cerute.
		
Problema 3

	Initial mi-am construit o functie bubblesort numita "sortare_vector" pentru a ordona descrescator un vector. Variabila pct memoreaza creditele totale pe care le-a adunat elevul initial, variabila pctmax memoreaza numarul de credite pe care le mai poate aduna daca isi mareste notele, iar vectorul p memoreaza numarul de credite pe care le mai poate obtine la fiecare materie. Asa cum cerea restrictia, daca elevul nu poate atinge punctajul minim, afisez "-1". Daca il poate atinge, apelez functia "sortare_vector", si in variabila m numar numarul de materii necesare, pe care il afisez ulterior.
	
Problema 4

	Pentru a-mi fi mai usor sa accesez datele de intrare, am hotarat sa citesc 2 vectori( dl si dc) , unul care retine numarul de secvente pe care ar trebui sa le aiba nomograma pe linii, altul care retine numarul de secvente de pe coloane. De asemenea, pt accesarea usoara, am citit 2 matrici( ml si mc) , care retineau dimensiunile secventelor de pe linii, respectiv de pe coloane, iar aceste dimensiuni au fost adunate la 2 vectori(sl pentru linii, sc pentru coloane). Practic, intr-un element din sl se afla suma elementelor care apartin respectivei linii in matricea ml, iar intr-un element din sc se afla suma elementelor care apartin respectivei linii din matricea mc. Apoi, dupa ce am citit nomograma care trebuia verificata, aceasta fiind de fapt o matrice(elem), am inceput sa parcurg elementele, intai pe linii, apoi pe coloane. Mi-am mai luat 2 vectori(sll si scc), intentionand sa pun in fiecare element al lui sll suma elementelor care apartin respectivei linii in nomograma ce trebuie verificata, iar in scc suma elementelor care apartin respectivei coloane din nomograma. In final, am realizat ca, pentru ca nomograma sa fie corecta, trebuie ca vectorii sl si sll, respectiv sc si scc, sa fie identici, aceasta identitate fiind afisata cu ajutorul contorului ctdim. De asemenea, pentru a putea fi verificate mai multe puzzle-uri, toate elementele celor patru vectori de suma au trebuit sa fie facute 0 la finalul for-ului care parcurgea puzzle-urile.
